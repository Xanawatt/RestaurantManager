/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Austin Bullard
 */

// Added import to be able to use DefaultListModel
import Employee.Employee;
import Employee.Employees;
import java.util.ArrayList;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.SwingUtilities;


public class EmployeeTrackerGUI extends javax.swing.JFrame {
    Employees employees;
    DefaultListModel mod = new DefaultListModel();
    
    
    public EmployeeTrackerGUI() {
        initComponents();
        employees = Driver.getEmployees();
        loadEmployees();
    }
   
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        lstEmployees = new javax.swing.JList<>();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        txtEmployeeName = new javax.swing.JTextField();
        txtEmployeeAge = new javax.swing.JTextField();
        txtEmployeeTitle = new javax.swing.JTextField();
        txtEmployeeID = new javax.swing.JTextField();
        txtEmployeeSalary = new javax.swing.JTextField();
        btnAddEmployee = new javax.swing.JButton();
        btnDeleteEmployee = new javax.swing.JButton();
        btnUpdateEmployee = new javax.swing.JButton();
        btnClear = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setResizable(false);

        lstEmployees.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                lstEmployeesValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(lstEmployees);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel1.setText("Employee Information List:");

        jLabel2.setText("Name:");

        jLabel3.setText("Age:");

        jLabel4.setText("Title:");

        jLabel5.setText("ID:");

        jLabel6.setText("Salary:");

        btnAddEmployee.setText("Add Employee");
        btnAddEmployee.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddEmployeeActionPerformed(evt);
            }
        });

        btnDeleteEmployee.setText("Delete Employee");
        btnDeleteEmployee.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteEmployeeActionPerformed(evt);
            }
        });

        btnUpdateEmployee.setText("Update Employee");
        btnUpdateEmployee.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateEmployeeActionPerformed(evt);
            }
        });

        btnClear.setText("Clear Text");
        btnClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addComponent(jLabel1)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.TRAILING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtEmployeeID)
                    .addComponent(txtEmployeeSalary)
                    .addComponent(txtEmployeeTitle)
                    .addComponent(txtEmployeeName)
                    .addComponent(txtEmployeeAge)
                    .addComponent(btnUpdateEmployee, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnAddEmployee, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnClear, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnDeleteEmployee, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(43, 43, 43)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(14, 14, 14)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtEmployeeName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtEmployeeAge, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3))
                        .addGap(8, 8, 8)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtEmployeeTitle, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtEmployeeID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtEmployeeSalary, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnUpdateEmployee)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnAddEmployee)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnClear)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnDeleteEmployee)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnAddEmployeeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddEmployeeActionPerformed
        addEmployee();
    }//GEN-LAST:event_btnAddEmployeeActionPerformed

    private void btnUpdateEmployeeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateEmployeeActionPerformed
        updateEmployee();
    }//GEN-LAST:event_btnUpdateEmployeeActionPerformed

    private void btnDeleteEmployeeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteEmployeeActionPerformed
        deleteEmployee(true);
    }//GEN-LAST:event_btnDeleteEmployeeActionPerformed

    private void btnClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearActionPerformed
        txtEmployeeAge.setText("");
        txtEmployeeID.setText("");
        txtEmployeeName.setText("");
        txtEmployeeSalary.setText("");
        txtEmployeeTitle.setText("");
        loadEmployees();
    }//GEN-LAST:event_btnClearActionPerformed

    private void lstEmployeesValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_lstEmployeesValueChanged
        Employee employeeSelected;
        int index = lstEmployees.getSelectedIndex(); 
        if (index < 0) {
            return;
        }
        
        employeeSelected = employees.getEmployee(index);
        txtEmployeeName.setText(employeeSelected.getEmployeeName());
        txtEmployeeID.setText(Integer.toString(employeeSelected.getEmployeeID()));
        txtEmployeeAge.setText(Integer.toString(employeeSelected.getEmployeeAge()));
        txtEmployeeTitle.setText(employeeSelected.getEmployeeTitle());
        txtEmployeeSalary.setText(Double.toString(employeeSelected.getEmployeeWage()));
    }//GEN-LAST:event_lstEmployeesValueChanged

    
    private void loadEmployees() {
        txtEmployeeID.setText(Integer.toString(Employee.getNextID()));
        txtEmployeeID.setEnabled(false);
        ArrayList<Employee> employeeList = employees.getAllEmployees();
        lstEmployees.setModel(mod);
        mod.removeAllElements();
        
        employeeList.forEach((i) -> {
            mod.addElement(i.getEmployeeName());
        });
    }
    
    private void addEmployee() {
        if (validateInput() == false) {
            return;
        }
        
        Employee employeeToAdd = new Employee(txtEmployeeName.getText(), 
                                              Integer.parseInt(txtEmployeeAge.getText()), 
                                              txtEmployeeTitle.getText(),
                                              Integer.parseInt(txtEmployeeID.getText()),
                                              Double.parseDouble(txtEmployeeSalary.getText()));
        
        
        employees.addEmployee(employeeToAdd);
        loadEmployees();
        
    }
    
    private void deleteEmployee(boolean check) {
        Employee employeeSelected;
        int index = lstEmployees.getSelectedIndex(); 
        if (index < 0) {
            return;
        }
        
        employeeSelected = employees.getEmployee(index);
        
        if (!check) {
            employees.removeEmployee(employeeSelected);
            loadEmployees();
            return;
        }
        
        if (JOptionPane.showConfirmDialog(this, "Are you sure you want to delete " + employeeSelected.getEmployeeName() + "?") == 0) {
            employees.removeEmployee(employeeSelected);
            loadEmployees();
        }
    }
    
    private void updateEmployee() {
        if (validateInput() == false) {
            return;
        }
        
        Employee employeeSelected;
        int index = lstEmployees.getSelectedIndex(); 
        if (index < 0) {
            return;
        }
            
        
        employeeSelected = employees.getEmployee(index);
        if (JOptionPane.showConfirmDialog(this, "Are you sure you want to update " + employeeSelected.getEmployeeName() + "?") == 0) {
            employeeSelected.setEmployeeName(txtEmployeeName.getText());
            employeeSelected.setEmployeeAge(Integer.parseInt(txtEmployeeAge.getText()));
            employeeSelected.setEmployeeTitle(txtEmployeeTitle.getText());
            employeeSelected.setEmployeeWage(Double.parseDouble(txtEmployeeSalary.getText()));
            
            loadEmployees();
        }
        
    }
    
    private void showMessage(String message) {
        JOptionPane.showMessageDialog(this, message, "Error", JOptionPane.ERROR_MESSAGE);
    }
    
    private void setFocus(JTextField textbox) {
        SwingUtilities.invokeLater(new Runnable() {
            public void run() {
                textbox.requestFocus();
            }
        });
        
    }
    
    private boolean validateInput() {
        if (txtEmployeeName.getText().length() == 0) {
            showMessage("Please enter the Employee Name.");
            setFocus(txtEmployeeName);
            return false;
        }
        
        try {
            int age = Integer.parseInt(txtEmployeeAge.getText());
            
            if (age > 100 || age < 18) {
                showMessage("Employee Age must be between 18-100.");
                setFocus(txtEmployeeAge);
                return false;
            }
        } catch (NumberFormatException e) {
            showMessage("Please enter an Integer for the Employee Age.");
            setFocus(txtEmployeeAge);
            return false;
        }
        
        if (txtEmployeeTitle.getText().length() == 0) {
            showMessage("Please enter the Employee Title.");
            setFocus(txtEmployeeTitle);
            return false;
        }
        
        try {
            Double.parseDouble(txtEmployeeSalary.getText());
        } catch (NumberFormatException e) {
            showMessage("Please enter a Double for the Employee Salary.");
            setFocus(txtEmployeeSalary);
            return false;
        }
        
        return true;
    }
    
    
    
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        
        
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(EmployeeTrackerGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(EmployeeTrackerGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(EmployeeTrackerGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(EmployeeTrackerGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new EmployeeTrackerGUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddEmployee;
    private javax.swing.JButton btnClear;
    private javax.swing.JButton btnDeleteEmployee;
    private javax.swing.JButton btnUpdateEmployee;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JList<String> lstEmployees;
    private javax.swing.JTextField txtEmployeeAge;
    private javax.swing.JTextField txtEmployeeID;
    private javax.swing.JTextField txtEmployeeName;
    private javax.swing.JTextField txtEmployeeSalary;
    private javax.swing.JTextField txtEmployeeTitle;
    // End of variables declaration//GEN-END:variables
}
